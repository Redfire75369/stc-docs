(function() {var implementors = {
"rnode":[],
"stc_ts_generics":[["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.CallSignature.html\" title=\"struct stc_ts_types::CallSignature\">CallSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.ConstructorSignature.html\" title=\"struct stc_ts_types::ConstructorSignature\">ConstructorSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.PropertySignature.html\" title=\"struct stc_ts_types::PropertySignature\">PropertySignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.MethodSignature.html\" title=\"struct stc_ts_types::MethodSignature\">MethodSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.IndexSignature.html\" title=\"struct stc_ts_types::IndexSignature\">IndexSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.ClassProperty.html\" title=\"struct stc_ts_types::ClassProperty\">ClassProperty</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Method.html\" title=\"struct stc_ts_types::Method\">Method</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.CallSignature.html\" title=\"struct stc_ts_types::CallSignature\">CallSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.ConstructorSignature.html\" title=\"struct stc_ts_types::ConstructorSignature\">ConstructorSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.MethodSignature.html\" title=\"struct stc_ts_types::MethodSignature\">MethodSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.TypeParamDecl.html\" title=\"struct stc_ts_types::TypeParamDecl\">TypeParamDecl</a>&gt;&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.TypeParam.html\" title=\"struct stc_ts_types::TypeParam\">TypeParam</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Function.html\" title=\"struct stc_ts_types::Function\">Function</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.TypeParamDecl.html\" title=\"struct stc_ts_types::TypeParamDecl\">TypeParamDecl</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/renamer/struct.TypeParamRenamer.html\" title=\"struct stc_ts_generics::type_param::renamer::TypeParamRenamer\">TypeParamRenamer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.MethodSignature.html\" title=\"struct stc_ts_types::MethodSignature\">MethodSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/renamer/struct.TypeParamRenamer.html\" title=\"struct stc_ts_generics::type_param::renamer::TypeParamRenamer\">TypeParamRenamer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Function.html\" title=\"struct stc_ts_types::Function\">Function</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/renamer/struct.TypeParamRenamer.html\" title=\"struct stc_ts_generics::type_param::renamer::TypeParamRenamer\">TypeParamRenamer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/renamer/struct.TypeParamRenamer.html\" title=\"struct stc_ts_generics::type_param::renamer::TypeParamRenamer\">TypeParamRenamer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/replacer/struct.TypeParamReplacer.html\" title=\"struct stc_ts_generics::type_param::replacer::TypeParamReplacer\">TypeParamReplacer</a>"]],
"stc_ts_type_ops":[["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Ref.html\" title=\"struct stc_ts_types::Ref\">Ref</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Union.html\" title=\"struct stc_ts_types::Union\">Union</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Tuple.html\" title=\"struct stc_ts_types::Tuple\">Tuple</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Function.html\" title=\"struct stc_ts_types::Function\">Function</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Interface.html\" title=\"struct stc_ts_types::Interface\">Interface</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Class.html\" title=\"struct stc_ts_types::Class\">Class</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.ClassProperty.html\" title=\"struct stc_ts_types::ClassProperty\">ClassProperty</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.TypeLit.html\" title=\"struct stc_ts_types::TypeLit\">TypeLit</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/tuple_to_array/struct.TupleToArray.html\" title=\"struct stc_ts_type_ops::tuple_to_array::TupleToArray\">TupleToArray</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/widen/struct.Widen.html\" title=\"struct stc_ts_type_ops::widen::Widen\">Widen</a>"]],
"stc_visit":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()